const express = require("express");
const router = express.Router();
const db = require("../db");
const cors = require("cors");

require("dotenv").config();
const API_URL = process.env.API_URL || "http://localhost:5000";  // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î API_URL
// ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ CORS ‡πÉ‡∏´‡πâ API ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ó‡∏∏‡∏Å‡πÇ‡∏î‡πÄ‡∏°‡∏ô
const corsOptions = {
    origin: "*", // ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ó‡∏∏‡∏Å‡∏ó‡∏µ‡πà (Allow All Origins)
    methods: ["GET", "POST", "PUT", "DELETE"], // ‚úÖ ‡∏£‡∏∞‡∏ö‡∏∏ HTTP Methods ‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
    allowedHeaders: ["Content-Type", "Authorization"], // ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï Headers ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
};

// ‚úÖ ‡πÉ‡∏ä‡πâ CORS
router.use(cors(corsOptions));
router.use(express.json());

// ‚úÖ Middleware: ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÉ‡∏´‡πâ API ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ localhost
const checkLocalhost = (req, res, next) => {
    if (req.hostname !== "localhost") {
        return res.status(403).json({ success: false, message: "API ‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏ô localhost ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô" });
    }
    next();
};

// ‚úÖ POST: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏)
router.post("/", checkLocalhost, (req, res) => {
  const { table, items, totalAmount } = req.body;

  console.log("üì¶ ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Frontend:", req.body);

  if (!table || !items || items.length === 0 || !totalAmount || totalAmount <= 0) {
      return res.status(400).json({ error: "‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏ Table, items ‡πÅ‡∏•‡∏∞ totalAmount" });
  }

  // ‚úÖ JSON.stringify(items) ‡∏à‡∏∞‡πÄ‡∏Å‡πá‡∏ö URL ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
  const sql = "INSERT INTO orders (table_number, items, total_amount, date) VALUES (?, ?, ?, ?)";
  const params = [table, JSON.stringify(items), totalAmount, new Date().toISOString()];

  db.run(sql, params, function (err) {
      if (err) {
          console.error("‚ùå Error inserting order:", err.message);
          return res.status(500).json({ error: err.message });
      }
      res.status(201).json({
          id: this.lastID,
          table,
          items,
          totalAmount,
          message: `‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏µ‡πà ${table} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`,
      });
  });
});

// ‚úÖ PUT: ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
router.put("/:id/payment", (req, res) => {
    const { id } = req.params;
    const sql = "UPDATE orders SET payment_status = 'paid' WHERE id = ?"; // üî• ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô payment_status
  
    db.run(sql, [id], function (err) {
      if (err) {
        return res.status(500).json({ error: err.message });
      }
      if (this.changes === 0) {
        return res.status(404).json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå" });
      }
  
      res.status(200).json({ message: "‚úÖ ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ñ‡∏π‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß" });
    });
  });
// ‚úÖ PUT: ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏õ‡πá‡∏ô "delivered"
router.put("/:id/delivery", (req, res) => {
  const { id } = req.params;
  const sql = "UPDATE orders SET status = 'delivered' WHERE id = ?";

  db.run(sql, [id], function (err) {
      if (err) {
          return res.status(500).json({ error: err.message });
      }
      if (this.changes === 0) {
          return res.status(404).json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå" });
      }
      res.status(200).json({ message: "‚úÖ ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß" });
  });
});


// ‚úÖ GET: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
router.get("/", (req, res) => {
  const sql = "SELECT * FROM orders WHERE status != 'paid'";  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏à‡πà‡∏≤‡∏¢

  db.all(sql, [], (err, rows) => {
      if (err) {
          return res.status(500).json({ error: err.message });
      }
      res.status(200).json(rows);
  });
});

// ‚úÖ GET: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß
router.get("/paid-orders", (req, res) => {
    const sql = "SELECT id, table_number, items, total_amount, date FROM orders WHERE payment_status = 'paid'";
  
    db.all(sql, [], (err, rows) => {
      if (err) {
        console.error("‚ùå Error fetching paid orders:", err.message);
        return res.status(500).json({ error: err.message });
      }
  
      if (!rows || rows.length === 0) {
        console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß");
        return res.status(404).json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß" });
      }
  
      console.log("üì¢ ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß:", rows);
      res.status(200).json(rows);
    });
  });


// ‚úÖ GET: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
router.get("/:id", checkLocalhost, (req, res) => {
    const { id } = req.params;
    const sql = "SELECT * FROM orders WHERE id = ?";

    db.get(sql, [id], (err, row) => {
        if (err) {
            return res.status(500).json({ error: err.message });
        }
        if (!row) {
            return res.status(404).json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå" });
        }
        res.status(200).json(row);
    });
});

// ‚úÖ DELETE: ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
router.delete("/", checkLocalhost, (req, res) => {
    const { table } = req.query;
    if (!table) {
        return res.status(400).json({ error: "‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ï‡πä‡∏∞" });
    }

    const sql = "DELETE FROM orders WHERE table_number = ?";
    db.run(sql, table, function (err) {
        if (err) {
           return res.status(500).json({ error: err.message });
       }
        if (this.changes === 0) {
            return res.status(404).json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞‡∏ô‡∏µ‡πâ" });
       }
        res.status(200).json({ message: `‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞ ${table} ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß` });
    });
});

// ‚úÖ DELETE: ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
router.delete("/:id", checkLocalhost, (req, res) => {
    const { id } = req.params;
    const sql = "DELETE FROM orders WHERE id = ?";

    db.run(sql, id, function (err) {
        if (err) {
            return res.status(500).json({ error: err.message });
        }
        if (this.changes === 0) {
            return res.status(404).json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå" });
        }
        res.status(200).json({ message: "‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß" });
    });
});


  
module.exports = router;
